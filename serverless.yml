service: escriod-zoho-implementation
frameworkVersion: '3'

custom:
  tableName: 'users-zoho-table-${sls:stage}'

plugins:
  - serverless-auto-swagger
  - serverless-dotenv-plugin


provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  api:
    handler: index.handler
    events:
      - httpApi: '*'
        documentation:
          summary: 'API Gateway'
          description: 'API Gateway'
          tags:
            - 'API Gateway'
          requestModels:
            application/json: 'Users'
          requestParameters:
            - name: 'userId'
              in: 'query'
              required: false
              description: 'User ID'
              schema:
                type: 'string'
          responses:
            '200':
              description: 'Success'
              content:
                application/json:
                  schema:
                    type: 'object'
                    properties:
                      message:
                        type: 'string'
                        example: 'Success'
            '400':
              description: 'Bad Request'
              content:
                application/json:
                  schema:
                    type: 'object'
                    properties:
                      message:
                        type: 'string'
                        example: 'Bad Request'
            '500':
              description: 'Internal Server Error'
              content:
                application/json:
                  schema:
                    type: 'object'
                    properties:
                      message:
                        type: 'string'
                        example: 'Internal Server Error'
          

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
